import telebot
from telebot import types

#DEVICE TYPES
# 1 - LED
# 2 - TEMPERATURE MEASURING
# 3 - LIGHT MEASURING
# 4 PRESSURE MEASURING
bot = telebot.TeleBot('6570224062:AAG43G3pLc3DnB3BFFbQC9_jCvKpywZ3BAs')

#DEVICE PARAMETRS (back part of the project that will use micropython to communicate with sensors, lamps and etc)

#---LED---
led_status = 0 # on/off

#---TEMPERATURE MEASURING---
tempMeasure  = 27
humidityMeasure = 60

#---LIGHT MEASURING----
lightMeasure = 100

@bot.message_handler(commands=['start'])

def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    led_button = types.KeyboardButton(text='LED –ª–µ–Ω—Ç–∞')
    tempMeasure = types.KeyboardButton(text = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞')
    lightMeasure = types.KeyboardButton(text = '–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å')

    markup.row(led_button,tempMeasure)
    markup.add(lightMeasure)
    bot.send_message(message.from_user.id, "üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è —á–∞—Ç-–±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–º–Ω—ã–º –¥–æ–º–æ–º")
    bot.send_message(message.from_user.id, "–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤–Ω–∏–∑—É‚¨áÔ∏è")
    bot.send_message(message.from_user.id, "–£–º–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n üî∏–£–ø—Ä–∞–≤–ª—è–µ–º–∞—è LED –ª–µ–Ω—Ç–∞ \n üî∏–î–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã \n üî∏–î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ \n üî∏–î–∞—Ç—á–∏–∫ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏",reply_markup = markup)
    bot.send_message(message.from_user.id, "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞:",reply_markup = markup)

def main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    led_button1 = types.InlineKeyboardButton(text='LED –ª–µ–Ω—Ç–∞')
    tempMeasure1 = types.KeyboardButton(text = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞')
    lightMeasure1 = types.KeyboardButton(text = '–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å')

    markup.row(led_button1,tempMeasure1)
    markup.add(lightMeasure1)
    bot.send_message(message.from_user.id, "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞:")
    bot.send_message(message.from_user.id, "–£–º–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n üî∏–£–ø—Ä–∞–≤–ª—è–µ–º–∞—è LED –ª–µ–Ω—Ç–∞ \n üî∏–î–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã \n üî∏–î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ \n üî∏–î–∞—Ç—á–∏–∫ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏",reply_markup = markup)
@bot.message_handler(content_types=['text'])


def get_text_message(message):
    #-----------------LED SETTINGS-----------------------
    global status
    if message.text == "LED –ª–µ–Ω—Ç–∞":
        if led_status == 1:
            status = "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–∫–ª—é—á–µ–Ω–æüîÜ"
        else:
            status = "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–æüí§"

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        setOn = types.KeyboardButton('–í–∫–ª—é—á–∏—Ç—å')
        setOff = types.KeyboardButton('–í—ã–∫–ª—é—á–∏—Ç—å')
        backMenu1 = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüíæ')
        markup.row(setOn, setOff)
        markup.add(backMenu1)
        bot.send_message(message.from_user.id, "–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: LED –ª–µ–Ω—Ç–∞")
        bot.send_message(message.from_user.id, status, reply_markup = markup)
    #--------------TEMPERATURE-----------------------------
    # need to add temp measuring in real time
    if message.text == "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        realTemp = types.KeyboardButton('–ò–∑–º–µ—Ä–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É')
        backMenu = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüíæ')
        markup.add(realTemp)
        markup.add(backMenu)
        bot.send_message(message.from_user.id, "–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: –¥–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ãüìà")
        bot.send_message(message.from_user.id, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:")
        bot.send_message(message.from_user.id, tempMeasure, reply_markup = markup)
        bot.send_message(message.from_user.id, "–ü–æ–¥—Å–∫–∞–∑–∫–∞: –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ—Ä–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏(–ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)")
        
    #-------------MAIN MENU--------------------------------
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüíæ":
        main_menu(message)
    
        
bot.polling(none_stop=True, interval=0)